# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class JobApplication(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, job_id: str=None, employee_id: str=None, employee_status: str=None, employer_status: str=None):  # noqa: E501
        """JobApplication - a model defined in Swagger

        :param id: The id of this JobApplication.  # noqa: E501
        :type id: str
        :param job_id: The job_id of this JobApplication.  # noqa: E501
        :type job_id: str
        :param employee_id: The employee_id of this JobApplication.  # noqa: E501
        :type employee_id: str
        :param employee_status: The employee_status of this JobApplication.  # noqa: E501
        :type employee_status: str
        :param employer_status: The employer_status of this JobApplication.  # noqa: E501
        :type employer_status: str
        """
        self.swagger_types = {
            'id': str,
            'job_id': str,
            'employee_id': str,
            'employee_status': str,
            'employer_status': str
        }

        self.attribute_map = {
            'id': 'id',
            'job_id': 'jobId',
            'employee_id': 'employeeId',
            'employee_status': 'employeeStatus',
            'employer_status': 'employerStatus'
        }
        self._id = id
        self._job_id = job_id
        self._employee_id = employee_id
        self._employee_status = employee_status
        self._employer_status = employer_status

    @classmethod
    def from_dict(cls, dikt) -> 'JobApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The jobApplication of this JobApplication.  # noqa: E501
        :rtype: JobApplication
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this JobApplication.


        :return: The id of this JobApplication.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this JobApplication.


        :param id: The id of this JobApplication.
        :type id: str
        """

        self._id = id

    @property
    def job_id(self) -> str:
        """Gets the job_id of this JobApplication.


        :return: The job_id of this JobApplication.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id: str):
        """Sets the job_id of this JobApplication.


        :param job_id: The job_id of this JobApplication.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def employee_id(self) -> str:
        """Gets the employee_id of this JobApplication.


        :return: The employee_id of this JobApplication.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id: str):
        """Sets the employee_id of this JobApplication.


        :param employee_id: The employee_id of this JobApplication.
        :type employee_id: str
        """

        self._employee_id = employee_id

    @property
    def employee_status(self) -> str:
        """Gets the employee_status of this JobApplication.


        :return: The employee_status of this JobApplication.
        :rtype: str
        """
        return self._employee_status

    @employee_status.setter
    def employee_status(self, employee_status: str):
        """Sets the employee_status of this JobApplication.


        :param employee_status: The employee_status of this JobApplication.
        :type employee_status: str
        """

        self._employee_status = employee_status

    @property
    def employer_status(self) -> str:
        """Gets the employer_status of this JobApplication.


        :return: The employer_status of this JobApplication.
        :rtype: str
        """
        return self._employer_status

    @employer_status.setter
    def employer_status(self, employer_status: str):
        """Sets the employer_status of this JobApplication.


        :param employer_status: The employer_status of this JobApplication.
        :type employer_status: str
        """

        self._employer_status = employer_status
